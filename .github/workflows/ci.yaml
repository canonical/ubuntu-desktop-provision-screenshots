name: CI

on:
  workflow_call:
    inputs:
      repository:
        description: repository to run the workflow on
        required: true
        type: string
      branch:
        description: branch to run the workflow on
        required: true
        type: string
      working-directory:
        description: working directory to run the test in
        required: true
        type: string
      output-directory:
        description: optional output directory
        default: '.'
        required: false
        type: string

jobs:
  screenshots:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        theme: [light, dark, high-contrast-light, high-contrast-dark]
      fail-fast: false

    steps:
      - name: Checkout ${{inputs.repository}}
        uses: actions/checkout@v4
        with:
          ref: ${{inputs.branch}}
          submodules: recursive
          repository: ${{inputs.repository}}

      - name: Clone screenshot repo
        uses: actions/checkout@v4
        with:
          ref: ${{inputs.branch}}
          path: 'screenshot-repo'

      - uses: asdf-vm/actions/install@v3
      - uses: bluefireteam/melos-action@v3

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y clang gsettings-desktop-schemas cmake curl libgtk-3-dev ninja-build pkg-config unzip xvfb
          sudo apt install -y dbus-x11 fonts-ubuntu network-manager upower
          make install_deps

      - name: Prepare environment
        run: |
          sudo loginctl enable-linger $USER
          sudo systemctl start user@$UID.service
          echo "XDG_RUNTIME_DIR=/run/user/$UID" >> $GITHUB_ENV
          # write any setting to force-start dconf.service (via xvfb because dbus-launch needs a display)
          xvfb-run -a gsettings set org.gnome.desktop.interface color-scheme "'default'"

      - name: Dump screenshots
        run: |
          xvfb-run -a -s '-screen 0 1024x768x24 +extension GLX' \
            flutter test --update-goldens integration_test/screenshot_test.dart
        working-directory: ${{inputs.working-directory}}
        env:
          SUBIQUITY_REPLAY_TIMESCALE: 100
          SCREENSHOT_THEME: ${{matrix.theme}}
          UDI_SCREENSHOT_THEME: ${{matrix.theme}}

      - name: Sync screenshots
        run: |
          rsync -avu --delete ${{inputs.working-directory}}/integration_test/screenshots/${{matrix.theme}} 'screenshot-repo/${{inputs.output-directory}}'

      - uses: peter-evans/create-pull-request@v7
        id: pr
        with:
          title: 'Update ${{inputs.output-directory}}/${{matrix.theme}} screenshots on `${{inputs.branch}}`'
          commit-message: 'Update ${{inputs.output-directory}}/${{matrix.theme}} screenshots on `${{inputs.branch}}`'
          author: GitHub <noreply@github.com>
          add-paths: ${{inputs.output-directory}}/${{matrix.theme}}
          branch: pr/${{inputs.branch}}/${{inputs.output-directory}}/${{matrix.theme}}
          delete-branch: true
          path: 'screenshot-repo'

      - run: gh pr merge --squash ${{steps.pr.outputs.pull-request-number}}
        working-directory: 'screenshot-repo'
        if: (steps.pr.outputs.pull-request-operation == 'created') || (steps.pr.outputs.pull-request-operation == 'updated')
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
